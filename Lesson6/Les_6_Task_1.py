# Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел. Количество вводимых чисел и цифра,
# которую необходимо посчитать, задаются вводом с клавиатуры.

'''
Общий вывод: Расмотрены три варианта решения задачи: с целым числом, строкой и списком.
Питон показал эффективность работы с памятью, особенно с большим вариантом чисел, когда одно и тоже число занимало одну и тоже ячейку памяти, и
мимнимзирует занимаемую память.
Список и строка резервируют и занимают больше количество памяти чем числа, наиболее затратным оказался метод со списком.
Наиболее подробные выводы после каждого примера.
Кратко
Числа: память постоянная в примерах 148 бит, число занимаемых ячеек с 4 до 9
Строка: 206 - 208 бит, память 5 - 8 ячеек
Список: 260 - 284 бит, память 5 - 8 ячеек
'''



# Вариант 1. Прямой поиск, без использования строки и листа

import sys

print(sys.version, sys.platform)

a = int(input('Введите целое число: '))
x = int(input('Введите число, которое надо посчитать: '))

k = 0
print('Числа a, x, k:                   ', a, x, k)
print('Номера ячеек памяти для a, x, k: ', id(a), id(x), id(k))
print('Размер памяти для    Task 8.    a, x, k: ', sys.getsizeof(a), sys.getsizeof(x), sys.getsizeof(k),'\n')

while a > 0:
    b = a//10
    c = a - b*10
    if c == x: k += 1
    a = b
    print('Числа a, b, c, x, k:                   ', a, b, c, x, k)
    print('Номера ячеек памяти для a, b, c, x, k: ',id(a),id(b), id(c), id(x), id(k))
    print('Размер памяти для       a, b, c, x, k: ',sys.getsizeof(a), sys.getsizeof(b), sys.getsizeof(c), sys.getsizeof(x), sys.getsizeof(k),'\n')

print ('количество цифр:',x,': ', k)

'''
Общий вывод: на этой программе видно как Питон экономит ячеки и место в памяти за счет использования одной и тойже ячейки при повторяющихся числах. Поскольку цель 
программы - поиск повторяющихся чисел, данная эффективность использования памяти видна исходя из цифр ниже. Поскольку хранение одного числа было максимум 28 бит, 
максимальное количество памяти равно 148 бит во всех примерах.

Поскольку программа ищет повторяющиеся числа, то из 
В примере 1 - двухзначное число, 2 - трехзначное и в 3 - четырех значное. 
Питон очень экономно расходует ячекий памяти и в случае дублирования чисел, как было сказано на уроке, использует одну ячеку

в Примере 1, было задествено 4 ячейки по 24 - 28 бит в зависимости от значения (0 - 24 бит, другая цифра - 28 бит). При этом программа обработала вычислений в памяти 13 чисел, т.е. питон смог 
ськономить 9 ячеек против прямого метода. Максимальное количество памяти равно 148 бит

В Примере 2. было задественно 6 ячеек, программа обработала 18 чисел, экономия 12 ячеек против прямого метода. Максимальное количество памяти равно 148 бит

В примере 3 (четырехзначное число), было задейственно 9 ячеек, обработано 23 числа. Максимальное количество памяти равно 148 бит   

'''
'''
 Пример 1
 Python 3.7.5 (default, Nov 20 2019, 09:21:52)
 [GCC 9.2.1 20191008] linux 64b
 Введите целое число: 22
 Введите число, которое надо посчитать: 2
 Числа a, x, k:                    22 2 0
 Номера ячеек памяти для a, x, k:  9302848 9302208 9302144
 Размер памяти для       a, x, k:  28 28 24

 Числа a, b, c, x, k:                    2 2 2 2 1
 Номера ячеек памяти для a, b, c, x, k:  9302208 9302208 9302208 9302208 9302176
 Размер памяти для       a, b, c, x, k:  28 28 28 28 28

 Числа a, b, c, x, k:                    0 0 2 2 2
 Номера ячеек памяти для a, b, c, x, k:  9302144 9302144 9302208 9302208 9302208
 Размер памяти для       a, b, c, x, k:  24 24 28 28 28

 количество цифр: 2 :  2

 Пример 2
 Введите целое число: 332
 Введите число, которое надо посчитать: 3
 Числа a, x, k:                    332 3 0
 Номера ячеек памяти для a, x, k:  139987991793008 9302240 9302144
 Размер памяти для    Task 8.    a, x, k:  28 28 24

 Числа a, b, c, x, k:                    33 33 2 3 0
 Номера ячеек памяти для a, b, c, x, k:  9303200 9303200 9302208 9302240 9302144
 Размер памяти для       a, b, c, x, k:  28 28 28 28 24

 Числа a, b, c, x, k:                    3 3 3 3 1
 Номера ячеек памяти для a, b, c, x, k:  9302240 9302240 9302240 9302240 9302176
 Размер памяти для       a, b, c, x, k:  28 28 28 28 28

 Числа a, b, c, x, k:                    0 0 3 3 2
 Номера ячеек памяти для a, b, c, x, k:  9302144 9302144 9302240 9302240 9302208
 Размер памяти для       a, b, c, x, k:  24 24 28 28 28

 количество цифр: 3 :  2

 Пример 3
 Введите целое число: 4322
 Введите число, которое надо посчитать: 2
 Числа a, x, k:                    4322 2 0
 Номера ячеек памяти для a, x, k:  140602639994224 9302208 9302144
 Размер памяти для    Task 8.    a, x, k:  28 28 24

 Числа a, b, c, x, k:                    432 432 2 2 1
 Номера ячеек памяти для a, b, c, x, k:  140602640728976 140602640728976 9302208 9302208 9302176
 Размер памяти для       a, b, c, x, k:  28 28 28 28 28

 Числа a, b, c, x, k:                    43 43 2 2 2
 Номера ячеек памяти для a, b, c, x, k:  9303520 9303520 9302208 9302208 9302208
 Размер памяти для       a, b, c, x, k:  28 28 28 28 28

 Числа a, b, c, x, k:                    4 4 3 2 2
 Номера ячеек памяти для a, b, c, x, k:  9302272 9302272 9302240 9302208 9302208
 Размер памяти для       a, b, c, x, k:  28 28 28 28 28

 Числа a, b, c, x, k:                    0 0 4 2 2
 Номера ячеек памяти для a, b, c, x, k:  9302144 9302144 9302272 9302208 9302208
 Размер памяти для       a, b, c, x, k:  24 24 28 28 28

 количество цифр: 2 :  2
'''